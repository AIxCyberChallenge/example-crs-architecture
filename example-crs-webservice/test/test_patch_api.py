# coding: utf-8

"""
    Example Competition API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501
import base64
import uuid

import unittest

from my_crs.openapi_client.api_client import ApiClient
from my_crs.openapi_client.configuration import Configuration
from my_crs.openapi_client.api.patch_api import PatchApi
from my_crs.openapi_client.models.types_patch_submission import (
    TypesPatchSubmission,
)


class TestPatchApi(unittest.TestCase):
    """PatchApi unit test stubs"""

    def setUp(self) -> None:
        configuration = Configuration(
            host="http://localhost:1323",
            username="api_key_id",
            password="api_key_token",
        )
        api_client = ApiClient(
            configuration=configuration,
            header_name="ContentType",
            header_value="application/json",
        )
        self.api = PatchApi(api_client=api_client)

    def tearDown(self) -> None:
        pass

    def test_v1_task_task_id_patch_patch_id_get(self) -> None:
        """Test case for v1_task_task_id_patch_patch_id_get

        Patch Status
        """
        task_id = str(uuid.uuid4())
        patch_id = str(uuid.uuid4())
        self.api.v1_task_task_id_patch_patch_id_get(
            task_id=task_id,
            patch_id=patch_id,
        )

    def test_v1_task_task_id_patch_post(self) -> None:
        """Test case for v1_task_task_id_patch_post

        Submit Patch
        """
        task_id = str(uuid.uuid4())
        patch_data = base64.b64encode("base64 encoded data".encode("utf-8"))
        payload = TypesPatchSubmission(
            description="this is the patch description",
            patch=patch_data.decode("utf-8"),
            vuln_id=str(uuid.uuid4()),
        )
        self.api.v1_task_task_id_patch_post(task_id=task_id, payload=payload)


if __name__ == "__main__":
    unittest.main()
